[tool.poetry]
name = "downloadbook-pdf-handler"
version = "0.1.0"
description = "A PDF creator for MediaWiki sites that use DownloadBook"
authors = ["Mark A. Hershberger <mah@nichework.com>"]
packages = [{ include = "src", from = "." }]
license = "gpl-3-or-later"
readme = "README.md"

[tool.poetry.scripts]
print_mw_collection = "src.print_mw_collection:main"
extract_font_sizes = "src.extract_font_sizes:main"
extract_urls = "src.extract_urls:main"
login = "src.login:main"

[tool.poetry.dependencies]
python = "^3.10"
requests = "^2.32.3"
pikepdf = "^9.4.2"
httpx = "^0.27.2"
lxml = "^5.3.0"
playwright = "^1.49.0"
python-dotenv = "^1.0.1"
mwclient = "^0.11.0"
defusedxml = "^0.7.1"
beautifulsoup4 = "^4.12.3"
pillow = "^11.0.0"

[tool.poetry.group.dev.dependencies]
flake8-pyproject = "^1.2.3"
python-lsp-server = "^1.11.0"
pyproject-pre-commit = "^0.1.10"
icecream = "^2.1.3"
numpydoc = "^1.8.0"
pylint = "^3.3.1"
pylsp-mypy = "^0.6.9"
types-paramiko = "^3.5.0.20240928"
types-lxml = "^2024.11.8"
types-requests = "^2.32.0.20241016"
types-defusedxml = "^0.7.0.20240218"

[tool.numpydoc_validation]
# all except these listed
checks = ["all","EX01","SA01","ES01"]

# remember to use single quotes for regex in TOML
exclude = ['\.undocumented_method$', '\.__repr__$']
override_SS05 = ['^Process ', '^Assess ', '^Access ']

[tool.pylint]
max-line-length = 120

[tool.black]
line-length = 120
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '/(\.eggs|\.git|\.hg|\.mypy_cache|\.tox|\.venv|build|dist)/'

[tool.flake8]
max-line-length = 120
ignore = ["N815", "D100", "D101", "D107", "W503", "E116", "E262", "RST301"]

[tool.isort]
profile = "black"
multi_line_output = 3
py_version = 312

[tool.mypy]
python_version = "3.12"
disallow_untyped_defs = true
strict_optional = true

[[tool.mypy.overrides]]
module = ["ansible.*", "inventory.*", "python_terraform.*", "linode_api4.*", "api4jenkins.*", "icecream.*", "mwclient.*"]
ignore_missing_imports = true

[tool.bandit]
skips = ["B701", "B506"]

[tool.pylsp.plugins.pylsp_mypy]
enabled = true

[tool.pylsp.plugins.black]
enabled = true

[tool.pylsp.plugins.isort]
enabled = true

[tool.pylsp.plugins.flake8]
enabled = true

[tool.pylsp.plugins.mccabe]
enabled = true

[tool.pylsp.plugins.pylint]
enabled = true

[tool.pylsp.plugins.pycodestyle]
enabled = false

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
